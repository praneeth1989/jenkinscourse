node {
    def server = Artifactory.server('atmecsjfrog.jfrog.io')
    def rtGradle = Artifactory.newGradleBuild()
    def buildInfo = Artifactory.newBuildInfo()
    def myGradleContainer = docker.image('gradle:jdk8')
    myGradleContainer.pull()

    stage('prep') {
        git url: 'https://github.com/praneeth1989/gs-gradle.git'
    }

    stage('build') {
      myGradleContainer.inside("-v ${env.HOME}/.gradle:/home/gradle/.gradle") {
        sh 'cd complete && /opt/gradle/bin/gradle build'
      }
    }
   
    stage('sonar-scanner') {
      def sonarqubeScannerHome = tool name: 'sonar', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
      withCredentials([string(credentialsId: 'sonar', variable: 'sonarLogin')]) {
        sh "${sonarqubeScannerHome}/bin/sonar-scanner -e -Dsonar.host.url=http://3.82.249.137:9000 -Dsonar.login=${sonarLogin} -Dsonar.projectName=gs-gradle -Dsonar.projectVersion=${env.BUILD_NUMBER} -Dsonar.projectKey=GS -Dsonar.sources=complete/src/main/ -Dsonar.tests=complete/src/test/ -Dsonar.java.binaries=complete/src/test/ -Dsonar.language=java"
      }
    }
    
    
    stage ('Artifactory configuration & Publish') {
        rtGradle.tool = 'gradle' // Tool name from Jenkins configuration
        rtGradle.deployer repo:'gradle-dev-local',  server: server
        rtGradle.resolver repo:'gradle-dev', server: server
            buildInfo.env.capture = true
            buildInfo.env.filter.addInclude("*")
            rtGradle.usesPlugin = true // Artifactory plugin already defined in build script
            rtGradle.run rootDir: "artifactory/", buildFile: 'build.gradle', tasks: 'clean artifactoryPublish', buildInfo: buildInfo
            server.publishBuildInfo buildInfo
    }
   
     stage ('slack notification')
    {
     slackSend baseUrl: 'https://hooks.slack.com/services/', 
               channel: '#devops', 
               color: 'good', 
               message: "SUCCESS: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})",
               teamDomain: 'attics', 
               token: 'TFY1Y9E48/BG06VAN14/V0KHFB7aRdvMg22oaBjFUQ2r', 
               tokenCredentialId: 'slack-alerts'   
    }
}
